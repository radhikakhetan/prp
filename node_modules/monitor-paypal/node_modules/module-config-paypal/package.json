{
  "name": "module-config-paypal",
  "version": "1.0.7",
  "description": "Provide common configuration logic for modules to load configs",
  "main": "index.js",
  "license": "MIT",
  "homepage": "http://github.paypal.com/NodeInfra/module-config-paypal",
  "repository": {
    "type": "git",
    "url": "http://github.paypal.com/NodeInfra/module-config-paypal.git"
  },
  "publishConfig": {
    "registry": "http://npm.paypal.com"
  },
  "author": {
    "name": "Sanjeev Koranga",
    "email": "skoranga@paypal.com"
  },
  "keywords": [
    "module",
    "config"
  ],
  "scripts": {
    "test": "mocha"
  },
  "dependencies": {
    "confit_mod": "~0.0.1",
    "debug": "^2",
    "graceful-fs": "^4",
    "memory-cache": "~0.1.0",
    "shelljs": "~0.6.0",
    "try-require": "^1.0.0"
  },
  "devDependencies": {
    "async": "^1",
    "cal": "^0.5",
    "chai": "^2",
    "continuation-local-storage": "^3",
    "jshint": "^2",
    "mocha": "^2",
    "nconf": "^0",
    "should": "^3"
  },
  "engines": {
    "node": ">= 0.10.42"
  },
  "readme": "module-config-paypal\n=====\n\nThis module provides generic API to handle configuration for modules based on [confit](https://github.com/krakenjs/confit).\n\nIt loads module config as well as app config. App config has higher precedence than module config.\nThis module provides hierarchical env specific config loading in both sync and async flavor.\n\nModules or app can simply use `module-config-paypal` for reading the configurations.\n\n\n### Installation\n\n```\nnpm install module-config-paypal --save\n```\n\n### Config Name Guidelines\n\n - default config file name is `config.json`.\n - Environment specific config's will be\n    - for production - `production.json` - usually not required as all the prod configs should go to config.json.\n    - for development - `development.json`\n    - for stage/qa - `staging.json`\n    - for sandbox - `sandbox.json`\n    - for test - `test.json`\n\nThese environment's configs are controlled via `NODE_ENV` value. In Stage/Sandbox/Production, this value is set via deploy scripts. In case of no `NODE_ENV` it will load development config.\n\n\n### Usage\n\nReading module config\n\n```javascript\nvar modConfig = require('module-config-paypal');\n\nmodConfig(module, function(err, config) {\n    var svcsettings = config.get('services:myservice');\n    console.log(svcsettings);\n});\n```\n\nNote: passing \"module\" as the first parameter works fine as long as you have no other package.json files except at the root of your module. If there is a package.json file on the path from where you run module config up to the root,\nyou should pass the path to the module root as a string when setting up module config.\n\n",
  "readmeFilename": "README.md",
  "_id": "module-config-paypal@1.0.7",
  "_shasum": "7939b07741dca2a3c93bda90049143f3f6ecf2ed",
  "_from": "module-config-paypal@^1.0.0",
  "_resolved": "http://npm.paypal.com/module-config-paypal/-/module-config-paypal-1.0.7.tgz"
}
