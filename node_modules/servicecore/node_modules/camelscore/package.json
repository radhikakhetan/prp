{
  "name": "camelscore",
  "description": "camelCase and under_score utilities for objects.",
  "version": "0.1.2",
  "author": {
    "name": "Trevor Livingston",
    "email": "tlivings@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/tlivings/camelscore.git"
  },
  "bugs": {
    "url": "https://www.github.com/tlivings/camelscore/issues"
  },
  "publishConfig": {
    "registry": "https://registry.npmjs.org"
  },
  "engines": {
    "node": "0.10.x"
  },
  "dependencies": {
    "core-util-is": "^1.0.1"
  },
  "devDependencies": {
    "tape": "^2.4.2",
    "istanbul": "~0.2.3",
    "jshint": "^2.4.1"
  },
  "scripts": {
    "test": "tape test/*.js",
    "cover": "istanbul cover tape -- test/*.js",
    "lint": "jshint -c .jshintrc index.js lib/"
  },
  "main": "./lib/index",
  "readme": "# Camelscore\n\nUtility functions for converting `under_score` style strings to `camelCase` and the reverse, as well as on objects.\n\nAlso works on objects for converting all property names, as well as stripping or modifying keys before running.\n\n# API\n\n- `camelCase(string)` - convert a underscored string to camel-case. Note: leading and trailing `_` will not be affected.\n- `underscore(string)` - convert a camel-cased string to underscores. Note: leading and trailing `_` will not be affected.\n- `camelize(object, fn)` - convert an object's underscored property names to camel-case. Optionally run `fn` through `map` function first.\n- `underscorify(object, fn)` - convert an object's camel-cased property names to underscores. Optionally run `fn` through `map` function first.\n\n# Usage\n\n```javascript\nvar camelscore = require('camelscore');\n\nvar camelCased = camelscore.camelize({\n    foo_bar: {\n        hello_world: \"hello world!\"\n    }\n});\n```\n\nWill result in:\n\n```javascript\n{\n    \"fooBar\": {\n        \"helloWorld\": \"hello world!\"\n    }\n}\n```\n\nTo use `map` function:\n\n```javascript\nvar camelscore = require('camelscore');\n\nvar camelCased = camelscore.camelize({\n    foo_bar: {\n        hello_world: \"hello world!\",\n        goodbye: \"goodbye\"\n    }\n}, function (k) {\n    return k === 'goobye' ? undefined : k;\n});\n```\n\nWill result in:\n\n```javascript\n{\n    \"fooBar\": {\n        \"helloWorld\": \"hello world!\"\n    }\n}\n```\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/tlivings/camelscore",
  "_id": "camelscore@0.1.2",
  "_shasum": "0304ff94579977d32da9f01124adb4829eebb567",
  "_from": "camelscore@^0.1.0",
  "_resolved": "http://npm.paypal.com/camelscore/-/camelscore-0.1.2.tgz"
}
