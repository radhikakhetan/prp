{
  "name": "connect-mayfly",
  "version": "0.4.5",
  "description": "A Mayfly2 Session Store for Connect",
  "main": "index.js",
  "scripts": {
    "test": "make test"
  },
  "homepage": "https://github.paypal.com/NodeInfra/connect-mayfly",
  "repository": {
    "type": "git",
    "url": "git@github.paypal.com:NodeInfra/connect-mayfly.git"
  },
  "publishConfig": {
    "registry": "http://npm.paypal.com"
  },
  "keywords": [
    "express",
    "session",
    "store",
    "mayfly",
    "node",
    "nodejs",
    "javascript",
    "js"
  ],
  "author": {
    "name": "Sanjeev Koranga",
    "email": "skoranga@paypal.com"
  },
  "license": "BSD",
  "readmeFilename": "README.md",
  "dependencies": {
    "async": "^1",
    "mayfly": "^0.1.30",
    "try-require": "^1.0.0",
    "environment-paypal": "^1"
  },
  "peerDependencies": {
    "cal": "^0",
    "express-session": ">=1.8"
  },
  "devDependencies": {
    "mocha": "^2",
    "cal": "^0.5",
    "nconf": "~0.6.7",
    "jshint": "^2",
    "express-session": "^1.8"
  },
  "readme": "# Connect Mayfly\n\nconnect-mayfly is a Mayfly session store backed by [node_mayfly](https://github.paypal.com/NodeServices/node-mayfly).\nThis allows you to connect to PayPal's own session store from node.js apps using express/connect.\n\n\n## Installation\n\n```bash\n$ npm install connect-mayfly\n```\n\n## Options\n\n  - `appName` App name, for logging purpose\n  - `noRetries` number of retries for connection\n  - `timeout` timeout for connection to mayfly directory server\n  - `crypto` Boolean value (true|false) to use data encryption\n  - `algorithm` If crypto is true and you want to use algorithm other than `aes-256-cbc`. Refer [node-mayfly](https://github.paypal.com/NodeServices/node-mayfly) for details\n  - `prefix` Key prefix defaulting to \"sess:\"\n  - `sharedSession` enable the shared session to share csrf in-between node apps. default `false`.\n\nThe options can be configured in config/config.json in a section like:\n```javascript\n{\n  \"middleware\": {\n    ...\n    \"session\": {\n      \"enabled\": true,\n      \"priority\": 100,\n      \"module\": {\n        \"name\": \"connect-mayfly/middleware\",\n        \"arguments\": [\n          {\n            \"cryptKey\": \"vault:encrypted_mayflysession_crypt_key\",\n            \"macKey\": \"vault:encrypted_mayflysession_mac_key\",\n            \"cookie\": {\n              \"path\": \"/\",\n              \"httpOnly\": true,\n              \"maxAge\": null\n            },\n            \"sharedSession\": true\n            \"proxy\": null\n          }\n        ]\n      }\n    }\n    ....\n  }\n}\n```\n\n## Usage\n\n Add connect-mayfly in package.json dependencies\n\n```javascript\n\"connect-mayfly\": \"~0.4.0\"\n```\n\n```javascript\nvar session = require('express-session'),\n    MayflyStore = require('connect-mayfly')(session),\n    config = {\n        lifetime: 3600\n    };\n\nexpress().use(session({ store: new MayflyStore(config), secret: 'keyboard cat' }));\n```\n\nBy doing this connect-mayfly build on `session.Store` object.\n\n\n## Session Sugar\n\n - This module will add _isNewSession: true|false key in returned session object to tell if it's a new session or not.\n - It also adds _sessionLen in returned session supplying the length of the retrieved session object. Used to avoid a stringify elsewhere to determine the length.\n\n## Test & Run\n\n```bash\n$ npm install\n$ make test       # to run tests\n```\n",
  "_id": "connect-mayfly@0.4.5",
  "_shasum": "149988b02456729fcc4d09a0213c7b76ea4ab176",
  "_from": "connect-mayfly@>=0.3.4",
  "_resolved": "http://npm.paypal.com/connect-mayfly/-/connect-mayfly-0.4.5.tgz"
}
